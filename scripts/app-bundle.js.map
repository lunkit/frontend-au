{"version":3,"sources":["app.js","environment.js","main.js","view-lunk.js","welcome.js","resources/index.js","resources/elements/create-lunk.js","/home/jared/web/lunkproject/frontend-au/src/resources/elements/loading-indicator.js","/home/jared/web/lunkproject/frontend-au/src/app.html","/home/jared/web/lunkproject/frontend-au/src/view-lunk.html","/home/jared/web/lunkproject/frontend-au/src/welcome.html","/home/jared/web/lunkproject/frontend-au/src/resources/elements/create-lunk.html"],"names":["App","configureRouter","config","router","title","options","pushState","root","map","route","name","moduleId","nav","debug","testing","api","baseUrl","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","env","httpClient","ViewLunk","lunk","activate","params","routeConfig","console","log","getLunk","id","create","created","message","sendLunk","fetch","default","response","json","data","status","welcome","CreateLunk","lunkId","encryptMessage","description","lunkIt","expire","views","method","body"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter(config, router) {\n    config.title = 'Contacts';\n    config.options.pushState = true;\n    config.options.root = '/';\n    config.map([\n      {route: ['', 'welcome'], name: 'welcome', moduleId: 'welcome', nav: true, title: 'Create a Lunk!'},\n      // {route: 'create', name: 'create', moudleId: 'lunkCreate', nav: true, title: 'Create A Lunk'},\n      {route: 'v/:id', name: 'view', moduleId: 'view-lunk', title: 'Viewing a Lunk'}\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true,\n  api: 'http://lunk.jared.tm',\n  baseUrl: 'http://localhost:9000'\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {HttpClient, json} from 'aurelia-fetch-client';\nimport * as env from 'environment';\n\nlet httpClient = new HttpClient();\n\nexport class ViewLunk {\n\n  constructor() {\n    this.lunk = null;\n  }\n\n  activate(params, routeConfig) {\n    console.log(params);\n    this.getLunk(params.id);\n  }\n\n  create() {\n    this.created = true;\n    console.log(this.message);\n    this.sendLunk(this.message);\n    //this.encryptMessage(this.message);\n    //Send the message to the server\n    //Get the response back and display the lunk created view\n  }\n\n\n  getLunk(lunk) {\n    httpClient.fetch(`${env.default.api}/lunk/${lunk}`)\n    .then(response => response.json())\n    .then(data =>{\n      console.log(data);\n      if (data.status === 'success') {\n        this.lunk = data.lunk;\n      } else {\n        this.lunk = data.message;\n      }\n      console.log(data);\n    });\n  }\n\n}\n","\nexport class welcome {\n  constructor() {\n    \n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {HttpClient, json} from 'aurelia-fetch-client';\nimport * as env from 'environment';\n\nlet httpClient = new HttpClient();\n\nexport class CreateLunk {\n\n  constructor() {\n    this.message = '';\n    this.created = false;\n    this.lunkId = null;\n    this.baseUrl = env.default.baseUrl;\n    console.log(env.default.api);\n  }\n\n  create() {\n    this.created = true;\n    console.log(this.message);\n    this.sendLunk(this.message);\n    //this.encryptMessage(this.message);\n    //Send the message to the server\n    //Get the response back and display the lunk created view\n  }\n\n  encryptMessage(message) {\n    httpClient.fetch('package.json')\n      .then(response => response.json())\n      .then(data=>{\n        console.log(data);\n        console.log(data.description);\n      });\n  }\n\n  sendLunk(lunk) {\n    let lunkIt = {\n      lunk: lunk,\n      expire: 10080,\n      views: 1\n    };\n    httpClient.fetch(`${env.default.api}/lunk`, {\n      method: 'post',\n      body: json(lunkIt)\n    }).then(response => response.json())\n    .then(data =>{\n      if (data.status === 'success') {\n        this.lunkId = data.lunkId;\n      }\n      console.log(data);\n    });\n  }\n\n}\n",null,null,null,null,null],"sourceRoot":"../src"}